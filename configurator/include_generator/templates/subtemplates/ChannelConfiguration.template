typedef Channel<
ChannelType<
$parameterized_strategies
>,
$network_type,
$payload_type
> ${channel_name}Type;

template <>
struct ChannelT<$channel_name>{
    ChannelT(const std::string & ip, const int port, const std::string & known_hostname, const int known_hostport, PubSubSystemEnvironment * pssi, std::vector<ChannelEventInterface *> & map, const std::vector<std::string> & rootList)
    {
        map.push_back(new ${channel_name}Type( $channel_name , ip, port, known_hostname, known_hostport, pssi, rootList));
    }
};